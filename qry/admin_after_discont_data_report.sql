WITH NURSE_UNIT_PTS AS (
	SELECT DISTINCT
		ENCNTR_LOC_HIST.ENCNTR_ID,
		ENCOUNTER.PERSON_ID
		/* ENCOUNTER.REG_DT_TM,
		ENCOUNTER.DISCH_DT_TM,
		pi_from_gmt(ENCOUNTER.REG_DT_TM, 'America/Chicago') AS ADMIT_DATETIME,
		pi_from_gmt(ENCOUNTER.DISCH_DT_TM, 'America/Chicago') AS DISCH_DATETIME,
		pi_from_gmt(ENCNTR_LOC_HIST.BEG_EFFECTIVE_DT_TM, 'America/Chicago') AS BEG_EFF_DATETIME,
		pi_from_gmt(ENCNTR_LOC_HIST.END_EFFECTIVE_DT_TM, 'America/Chicago') AS END_EFF_DATETIME,
		pi_get_cv_display(ENCNTR_LOC_HIST.LOC_FACILITY_CD) AS FACILITY,
		pi_get_cv_display(ENCNTR_LOC_HIST.ENCNTR_TYPE_CD) AS ENCNTR_TYPE */
	FROM
		ENCNTR_LOC_HIST,
		ENCOUNTER
	WHERE
		ENCNTR_LOC_HIST.LOC_FACILITY_CD IN (
			3310, -- HH HERMANN
			3796, -- HC Childrens
			-- 3821, -- HH Clinics
			3822, -- HH Trans Care
			3823 -- HH Rehab		
		)
		AND ENCNTR_LOC_HIST.BEG_EFFECTIVE_DT_TM <= pi_to_gmt(TRUNC(SYSDATE, 'MONTH') - 1/86400, 'America/Chicago')
		AND ENCNTR_LOC_HIST.END_EFFECTIVE_DT_TM >= pi_to_gmt(TRUNC(ADD_MONTHS(SYSDATE, -1), 'MONTH'), 'America/Chicago')
		AND ENCNTR_LOC_HIST.ENCNTR_TYPE_CD IN (
			29532, -- Inpatient
			29540 -- Observation			
		)
		AND ENCNTR_LOC_HIST.ENCNTR_ID = ENCOUNTER.ENCNTR_ID
		AND ENCOUNTER.DISCH_DT_TM >= pi_to_gmt(TRUNC(ADD_MONTHS(SYSDATE, -1), 'MONTH'), 'America/Chicago')
), DOSES AS (
	SELECT DISTINCT
		CLINICAL_EVENT.ENCNTR_ID,
		CLINICAL_EVENT.EVENT_END_DT_TM,
		CLINICAL_EVENT.PERFORMED_DT_TM,
		CLINICAL_EVENT.EVENT_ID,
		CLINICAL_EVENT.EVENT_CD,
		CASE
			WHEN ORDERS.TEMPLATE_ORDER_ID = 0 THEN ORDERS.ORDER_ID
			ELSE ORDERS.TEMPLATE_ORDER_ID
		END AS ORIG_ORDER_ID,
		ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD,
		MED_ADMIN_EVENT.POSITIVE_MED_IDENT_IND,
		MED_ADMIN_EVENT.POSITIVE_PATIENT_IDENT_IND
	FROM
		CE_MED_RESULT,
		CLINICAL_EVENT,
		ENCNTR_LOC_HIST,
		MED_ADMIN_EVENT,
		NURSE_UNIT_PTS,
		ORDERS
	WHERE
		NURSE_UNIT_PTS.ENCNTR_ID = CLINICAL_EVENT.ENCNTR_ID
		AND CLINICAL_EVENT.EVENT_CLASS_CD = 158 -- MED
		AND NURSE_UNIT_PTS.PERSON_ID = CLINICAL_EVENT.PERSON_ID
		AND CLINICAL_EVENT.EVENT_END_DT_TM BETWEEN
			pi_to_gmt(TRUNC(ADD_MONTHS(SYSDATE, -1), 'MONTH'), 'America/Chicago')
			AND pi_to_gmt(TRUNC(SYSDATE, 'MONTH') - 1/86400, 'America/Chicago')
		AND CLINICAL_EVENT.VALID_UNTIL_DT_TM > DATE '2099-12-31'
		AND CLINICAL_EVENT.EVENT_ID = CE_MED_RESULT.EVENT_ID
		AND CE_MED_RESULT.VALID_UNTIL_DT_TM > DATE '2099-12-31'
		AND CE_MED_RESULT.ADMIN_DOSAGE > 0 
		AND CE_MED_RESULT.IV_EVENT_CD = 0
		AND CLINICAL_EVENT.ENCNTR_ID = ENCNTR_LOC_HIST.ENCNTR_ID
		AND ENCNTR_LOC_HIST.BEG_EFFECTIVE_DT_TM <= CLINICAL_EVENT.EVENT_END_DT_TM
		AND ENCNTR_LOC_HIST.TRANSACTION_DT_TM = (
			SELECT MAX(ELH.TRANSACTION_DT_TM)
			FROM ENCNTR_LOC_HIST ELH
			WHERE
				CLINICAL_EVENT.ENCNTR_ID = ELH.ENCNTR_ID
				AND ELH.TRANSACTION_DT_TM <= CLINICAL_EVENT.EVENT_END_DT_TM
		)
		AND ENCNTR_LOC_HIST.LOC_FACILITY_CD IN (
			3310, -- HH HERMANN
			3796, -- HC Childrens
			-- 3821, -- HH Clinics
			3822, -- HH Trans Care
			3823 -- HH Rehab		
		)
		AND ENCNTR_LOC_HIST.END_EFFECTIVE_DT_TM >= CLINICAL_EVENT.EVENT_END_DT_TM
		AND CLINICAL_EVENT.EVENT_ID = MED_ADMIN_EVENT.EVENT_ID(+)
		AND CLINICAL_EVENT.ORDER_ID = ORDERS.ORDER_ID
	
), DC_ORDERS AS (
	SELECT DISTINCT
		DOSES.*,
		ORDERS.ORIG_ORDER_DT_TM,
		ORDER_ACTION.ACTION_DT_TM,
		FREQUENCY_SCHEDULE.FREQUENCY_CD
	FROM
		DOSES,
		FREQUENCY_SCHEDULE,
		ORDER_ACTION,
		ORDERS
	WHERE
		DOSES.ORIG_ORDER_ID = ORDERS.ORDER_ID
		AND ORDERS.ORDER_ID = ORDER_ACTION.ORDER_ID
		AND ORDER_ACTION.ACTION_TYPE_CD = 1374 -- Discontinue
		AND ORDER_ACTION.ACTION_DT_TM < DOSES.EVENT_END_DT_TM
		AND ORDERS.FREQUENCY_ID = FREQUENCY_SCHEDULE.FREQUENCY_ID
)

SELECT
	ENCNTR_ALIAS.ALIAS AS FIN,
	pi_get_cv_display(DC_ORDERS.EVENT_CD) AS MEDICATION,
	pi_from_gmt(DC_ORDERS.ORIG_ORDER_DT_TM, 'America/Chicago') AS ORDER_DATETIME,
	pi_from_gmt(DC_ORDERS.ACTION_DT_TM, 'America/Chicago') AS DISCONT_DATETIME,
	pi_from_gmt(DC_ORDERS.EVENT_END_DT_TM, 'America/Chicago') AS ADMIN_DATETIME,
	pi_from_gmt(DC_ORDERS.PERFORMED_DT_TM, 'America/Chicago') AS PERFORMED_DATETIME,
	pi_get_cv_display(DC_ORDERS.FREQUENCY_CD) AS FREQUENCY,
	CASE
		WHEN DC_ORDERS.POSITIVE_MED_IDENT_IND = 1 THEN 'Yes'
		ELSE 'No'
	END AS SCAN_MED,
	CASE
		WHEN DC_ORDERS.POSITIVE_PATIENT_IDENT_IND = 1 THEN 'Yes'
		ELSE 'No'
	END AS SCAN_PATIENT,
	pi_get_cv_display(DC_ORDERS.LOC_NURSE_UNIT_CD) AS NURSE_UNIT
FROM 
	DC_ORDERS,
	ENCNTR_ALIAS
WHERE
	DC_ORDERS.ENCNTR_ID = ENCNTR_ALIAS.ENCNTR_ID
	AND ENCNTR_ALIAS.ENCNTR_ALIAS_TYPE_CD = 619 -- FIN NBR
	AND ENCNTR_ALIAS.ACTIVE_IND = 1
