WITH NURSE_UNIT_PTS AS (
	SELECT DISTINCT
		ENCNTR_LOC_HIST.ENCNTR_ID
		/* ENCOUNTER.PERSON_ID,
		ENCNTR_LOC_HIST.ENCNTR_LOC_HIST_ID,
		ENCNTR_LOC_HIST.BEG_EFFECTIVE_DT_TM,
		ENCNTR_LOC_HIST.END_EFFECTIVE_DT_TM,
		ENCNTR_LOC_HIST.TRANSACTION_DT_TM,
		ENCNTR_LOC_HIST.LOC_FACILITY_CD,
		ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD,
		ENCOUNTER.REG_DT_TM,
		ENCOUNTER.DISCH_DT_TM */
	FROM
		ENCNTR_LOC_HIST
		-- ENCOUNTER
	WHERE
		ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD IN (
			4137, -- HH CCU
			5541, -- HH CVICU
			267504362, -- HH CVIMU
			891909143, -- HVI CIMU
			1993318732, -- HH HFIC
			1993319326 -- HH HFIM					
		)
		AND ENCNTR_LOC_HIST.END_EFFECTIVE_DT_TM >= 
			pi_to_gmt(
				TO_DATE(
					@Prompt('Enter begin date', 'D', , mono, free, persistent, {'01/01/1800 00:00:00'}, User:0), 
					pi_get_dm_info_char_gen('Date Format Mask|FT','PI EXP|Systems Configuration|Date Format Mask')
				), 
				'America/Chicago'
			)
		-- AND ENCNTR_LOC_HIST.ENCNTR_ID = ENCOUNTER.ENCNTR_ID
), DOSES AS (
	SELECT DISTINCT
		CLINICAL_EVENT.ENCNTR_ID,
		CLINICAL_EVENT.EVENT_END_DT_TM,
		CLINICAL_EVENT.PERFORMED_DT_TM,
		CLINICAL_EVENT.EVENT_ID,
		CLINICAL_EVENT.CATALOG_CD,
		CASE
			WHEN ORDERS.TEMPLATE_ORDER_ID = 0 THEN ORDERS.ORDER_ID
			ELSE ORDERS.TEMPLATE_ORDER_ID
		END AS ORIG_ORDER_ID,
		MED_ADMIN_EVENT.POSITIVE_MED_IDENT_IND,
		MED_ADMIN_EVENT.POSITIVE_PATIENT_IDENT_IND
		-- MED_ADMIN_EVENT.EVENT_TYPE_CD,
		-- MED_ADMIN_EVENT.BEG_DT_TM,
		-- MED_ADMIN_EVENT.END_DT_TM
		-- CE_MED_RESULT.IV_EVENT_CD,
		-- pi_get_cv_display(CE_MED_RESULT.IV_EVENT_CD) AS IV_EVENT
	FROM
		CE_MED_RESULT,
		CLINICAL_EVENT,
		ENCNTR_LOC_HIST,
		MED_ADMIN_EVENT,
		NURSE_UNIT_PTS,
		ORDERS
	WHERE
		NURSE_UNIT_PTS.ENCNTR_ID = CLINICAL_EVENT.ENCNTR_ID
		AND CLINICAL_EVENT.EVENT_CLASS_CD = 158 -- MED
		AND CLINICAL_EVENT.EVENT_END_DT_TM BETWEEN
			pi_to_gmt(
				TO_DATE(
					@Prompt('Enter begin date', 'D', , mono, free, persistent, {'01/01/1800 00:00:00'}, User:0), 
					pi_get_dm_info_char_gen('Date Format Mask|FT','PI EXP|Systems Configuration|Date Format Mask')
				), 
				'America/Chicago'
			)
			AND pi_to_gmt(
				TO_DATE(
					@Prompt('Enter end date', 'D', , mono, free, persistent, {'01/01/1800 00:00:00'}, User:1), 
					pi_get_dm_info_char_gen('Date Format Mask|FT','PI EXP|Systems Configuration|Date Format Mask')
				) - 1/86400, 
				'America/Chicago'
			)
		AND CLINICAL_EVENT.ENCNTR_ID = ENCNTR_LOC_HIST.ENCNTR_ID
		AND ENCNTR_LOC_HIST.BEG_EFFECTIVE_DT_TM <= CLINICAL_EVENT.EVENT_END_DT_TM
		AND ENCNTR_LOC_HIST.TRANSACTION_DT_TM = (
			SELECT MAX(ELH.TRANSACTION_DT_TM)
			FROM ENCNTR_LOC_HIST ELH
			WHERE
				CLINICAL_EVENT.ENCNTR_ID = ELH.ENCNTR_ID
				AND ELH.TRANSACTION_DT_TM <= CLINICAL_EVENT.EVENT_END_DT_TM
		)
		AND ENCNTR_LOC_HIST.END_EFFECTIVE_DT_TM >= CLINICAL_EVENT.EVENT_END_DT_TM
		AND ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD IN (
			4137, -- HH CCU
			5541, -- HH CVICU
			267504362, -- HH CVIMU
			891909143, -- HVI CIMU
			1993318732, -- HH HFIC
			1993319326 -- HH HFIM					
		)
		AND CLINICAL_EVENT.EVENT_ID = CE_MED_RESULT.EVENT_ID
		AND CE_MED_RESULT.ADMIN_DOSAGE > 0 
		AND CE_MED_RESULT.IV_EVENT_CD = 0
		AND CLINICAL_EVENT.EVENT_ID = MED_ADMIN_EVENT.EVENT_ID(+)
		AND CLINICAL_EVENT.ORDER_ID = ORDERS.ORDER_ID
	
), DC_ORDERS AS (
	SELECT DISTINCT
		DOSES.*,
		ORDERS.ORIG_ORDER_DT_TM,
		ORDER_ACTION.ACTION_DT_TM,
		FREQUENCY_SCHEDULE.FREQUENCY_CD
	FROM
		DOSES,
		FREQUENCY_SCHEDULE,
		ORDER_ACTION,
		ORDERS
	WHERE
		DOSES.ORIG_ORDER_ID = ORDERS.ORDER_ID
		AND ORDERS.ORDER_ID = ORDER_ACTION.ORDER_ID
		AND ORDER_ACTION.ACTION_TYPE_CD = 1374 -- Discontinue
		AND ORDER_ACTION.ACTION_DT_TM < DOSES.EVENT_END_DT_TM
		AND ORDERS.FREQUENCY_ID = FREQUENCY_SCHEDULE.FREQUENCY_ID
)

SELECT
	ENCNTR_ALIAS.ALIAS AS FIN,
	pi_get_cv_display(DC_ORDERS.CATALOG_CD) AS MEDICATION,
	pi_from_gmt(DC_ORDERS.ORIG_ORDER_DT_TM, 'America/Chicago') AS ORDER_DATETIME,
	pi_from_gmt(DC_ORDERS.ACTION_DT_TM, 'America/Chicago') AS DISCONT_DATETIME,
	pi_from_gmt(DC_ORDERS.EVENT_END_DT_TM, 'America/Chicago') AS ADMIN_DATETIME,
	pi_from_gmt(DC_ORDERS.PERFORMED_DT_TM, 'America/Chicago') AS PERFORMED_DATETIME,
	pi_get_cv_display(DC_ORDERS.FREQUENCY_CD) AS FREQUENCY,
	CASE
		WHEN DC_ORDERS.POSITIVE_MED_IDENT_IND = 1 THEN 'Yes'
		ELSE 'No'
	END AS SCAN_MED,
	CASE
		WHEN DC_ORDERS.POSITIVE_PATIENT_IDENT_IND = 1 THEN 'Yes'
		ELSE 'No'
	END AS SCAN_PATIENT	
FROM 
	DC_ORDERS,
	ENCNTR_ALIAS
WHERE
	DC_ORDERS.ENCNTR_ID = ENCNTR_ALIAS.ENCNTR_ID
	AND ENCNTR_ALIAS.ENCNTR_ALIAS_TYPE_CD = 619 -- FIN NBR


-- AND ORDERS.TEMPLATE_ORDER_FLAG IN (0, 1)
-- AND ORDERS.CATALOG_TYPE_CD = 1363 -- Pharmacy
-- AND ORDERS.ORDER_ID = ORDER_ACTION.ORDER_ID
-- AND ORDER_ACTION.ACTION_TYPE_CD = 1374 -- Discontinue
